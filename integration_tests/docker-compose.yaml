version: '3.9'

services:
  test_db:
    image: postgres:14.3
    container_name: test_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    expose:
      - "5432"

  test_minio:
    image: minio/minio:RELEASE.2022-10-24T18-35-07Z
    container_name: test_minio
    command: server /data --console-address ":9001"
    expose:
      - "9000"
      - "9001"
    environment:
      MINIO_SITE_REGION: ${AWS_DEFAULT_REGION}
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}

  test_create_bucket:
    image: minio/mc
    container_name: test_create_bucket
    depends_on:
      - test_minio
    entrypoint: >
      /bin/sh -c "
      echo sleep 5;
      sleep 5;
      /usr/bin/mc config host add myminio http://test_minio:9000 ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY};
      /usr/bin/mc mb myminio/${EXPERIMENT_NAME};
      exit 0;
      "

  test_mlflow_server:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: test_mlflow_server
    environment:
      AWS_REGION: ${AWS_REGION}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_S3_ENDPOINT_URL: http://test_minio:9000
    expose:
      - "5000"
    ports:
      - "5000:5000"
    command: >
      mlflow server 
      --host 0.0.0.0 
      --backend-store-uri postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@test_db:5432/${POSTGRES_DB} 
      --default-artifact-root s3://${EXPERIMENT_NAME}/test_mlflow
    depends_on:
      - test_db
      - test_minio

  test_app:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: test_app
    environment:
      AWS_REGION: ${AWS_REGION}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      MLFLOW_ENABLED: "True"
      MLFLOW_TRACKING_URI: http://test_mlflow_server:5000
      AWS_S3_ENDPOINT_URL: http://test_minio:9000
      EXPERIMENT_NAME: ${EXPERIMENT_NAME}
      MODEL_LOCATION: "/app/model"
      PORT: "9696"
      TEST: "True"
    command: "gunicorn --bind=0.0.0.0:9696 predict:app"
    volumes:
      - ../model:/app/model
    expose:
      - "9696"
    ports:
      - "9696:9696"
    depends_on:
      - test_mlflow_server
    restart: on-failure

  test_prefect:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: test_prefect
    environment:
      EXPERIMENT_NAME: ${EXPERIMENT_NAME}
      AWS_REGION: ${AWS_REGION}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_S3_ENDPOINT_URL: http://test_minio:9000
      MLFLOW_TRACKING_URI: http://test_mlflow_server:5000
      PREFECT_API_URL: http://127.0.0.1:4200/api
      PREFECT_SERVER_API_HOST: "0.0.0.0"
    command: "prefect server start"
    volumes:
      - ../data:/app/data
      - ../model:/app/model
    expose:
      - "4200"
    depends_on:
      - test_mlflow_server